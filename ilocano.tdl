;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of Ilocano
;;; created at:
;;;     Wed Apr 26 02:55:42 UTC 2017
;;; based on Matrix customization system version of:
;;;     Tue Apr 25 03:52:37 UTC 2017
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

noun :+ [ CASE case,
          LOCNOUN bool,
          NP-PRED-NOUN bool,
          DIRECT-OBJ-NOUN bool,
          WHQUES bool ].

head :+ [ AUX bool,
          ENCPRON bool,
          WHDETERMINER bool,
          INIT bool,
          FORM form ].

inflected :+ [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG luk,
    ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG luk,
    ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG luk ].

infl-satisfied :+ [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG na-or-+,
    ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG na-or-+,
    ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG na-or-+ ].

png :+ [ PER person,
         NUM number ].

basic-head-comp-phrase :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-mod-phrase-simple :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-opt-comp-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SUBJ < > ].

isect-mod-phrase :+ [ NON-HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

;;;;;;;;;;;;;;
;;; Features
;;;;;;;;;;;;;;

;;; Case

case := *top*.
;foc := case.  ; focus-case
obl := case.  ; obliq
cor+erg := case.
cor := cor+erg & cor+abs.
erg := cor+erg.
cor+abs := case.
abs := cor+abs.
ind-pron := case.

;;; Person

person := *top*.
1st := person.
2nd := person.
3rd := person.

;;; Number

number := *top*.
sg := number.
non-sg := number.
pl := non-sg.
du := non-sg.
dist-pl := pl.

;;; Pernum
;;; customization system output didn't work well
;pernum := *top*.
;sg := pernum.
;non-sg := pernum.
;pl := non-sg & pl+3rd & pl+1st & pl+2nd.
;du := non-sg.
;dist-pl := pl.
;1sg := 1st & sg.
;2sg := 2nd & sg.
;3sg := 3rd & sg.
;1du := 1st & du.
;2du := 2nd & du.
;3du := 3rd & du.
;1dist-pl := 1st & dist-pl.
;2dist-pl := 2nd & dist-pl.
;3dist-pl := 3rd & dist-pl.
;pl+3rd := pernum.
;3rd := pl+3rd.
;pl+1st := pernum.
;1st := pl+1st.
;pl+2nd := pernum.
;2nd := pl+2nd.
;
;;; Form

form := *top*.
nonfinite := form.
finite := form.

;;; Aspect

perfective := aspect.
imperfective := aspect.
past-imperfective := aspect.
infinitive := aspect.
no-aspect := aspect.

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < #spr &
                                 [ LOCAL.CAT.HEAD det ] >,
                           COMPS < >,
                           SUBJ < >,
                           SPEC < > ],
    ARG-ST < #spr > ].

obl-spr-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPR < [ OPT - ] > ].

no-spr-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPR < [ OPT + ] > ].

; Nouns which cannot take specifiers mark their SPR requirement
; as OPT +.  Making the non-head daughter OPT - in this rule
; keeps such nouns out.
; 
; Rules for building NPs.  Note that the Matrix uses SPR for
; the specifier of nouns and SUBJ for the subject (specifier) of verbs.

head-final-spec-phrase := basic-head-spec-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.WHQUES - ,
    NON-HEAD-DTR.SYNSEM [ OPT - ,
                          LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CAT.HEAD.WHDETERMINER - ] ].

head-initial-spec-phrase := basic-head-spec-phrase & head-initial &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.WHQUES + ,
    NON-HEAD-DTR.SYNSEM [ OPT - ,
                          LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CAT.HEAD.WHDETERMINER + ] ].

common-noun-lex := obl-spr-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD [ LOCNOUN - ,
                              ENCPRON - ,
                              WHQUES - ],
                   CONT.HOOK.INDEX.PNG.PER 3rd ] ].

locative-noun-lex := basic-noun-lex & non-mod-lex-item & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT [ VAL [ SPR < [ LOCAL.CONT.HOOK.INDEX.PNG.NUM sg ] >,
                             COMPS < #comps & [ LOCAL.CAT [ HEAD noun & [ CASE cor ],
                                                            VAL.SPR < > ], 
                                                OPT - ] > ],
                       HEAD noun & [ CASE obl,
                                     LOCNOUN + ] ],
    ARG-ST < #comps > ].

pron-noun-lex := no-spr-noun-lex &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX [ COG-ST activ-or-more,
                                     SPECI + ],
                   CAT.HEAD [ LOCNOUN - ,
                              DIRECT-OBJ-NOUN - ,
                              WHQUES - ] ] ].

enc-pron-noun-lex := pron-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ NP-PRED-NOUN - ,
                            ENCPRON + ] ].

erg-1sg-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG [ PER 1st, NUM sg ] ] ].

erg-2sg-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG [ PER 2nd, NUM sg ] ] ].

erg-3sg-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG [ PER 3rd, NUM sg ] ] ].

erg-3pl-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG [ PER 3rd, NUM pl ] ] ].

abs-1sg-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE abs,
                   CONT.HOOK.INDEX.PNG [ PER 1st, NUM sg ] ] ].

abs-2sg-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE abs,
                   CONT.HOOK.INDEX.PNG [ PER 2nd, NUM sg ] ] ].

abs-3pl-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE abs,
                   CONT.HOOK.INDEX.PNG [ PER 3rd, NUM pl ] ] ].

abs-1pl-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE abs,
                   CONT.HOOK.INDEX.PNG [ PER 1st, NUM pl ] ] ].

abs-2pl-noun-lex := no-spr-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE abs,
                   CONT.HOOK.INDEX.PNG [ PER 1st, NUM pl ] ] ].

abs-du-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE abs,
                   CONT.HOOK.INDEX.PNG [ PER 1st, NUM du ] ] ].

erg-1pl-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG [ PER 1st, NUM pl ] ] ].

erg-du-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG [ PER 1st, NUM du ] ] ].

erg-2pl-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG [ PER 2nd, NUM pl ] ] ].

ind-pron-noun-lex := pron-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ NP-PRED-NOUN +,
                            CASE ind-pron,
                            DIRECT-OBJ-NOUN - ,
                            ENCPRON - ] ].

ind-1sg-noun-lex := ind-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st, NUM sg ] ].

ind-1pl-noun-lex := ind-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st, NUM pl ] ].

ind-du-noun-lex := enc-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st, NUM du ] ].

ind-2sg-noun-lex := ind-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd, NUM sg ] ].

ind-2pl-noun-lex := ind-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd, NUM pl ] ].

ind-3sg-noun-lex := ind-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd, NUM sg ] ].

ind-3pl-noun-lex := ind-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd, NUM pl ] ].

redup-gem-noun-lex := obl-spr-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd, NUM dist-pl ] ].

obl-pron-noun-lex := pron-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE obl,
                            NP-PRED-NOUN -,
                            DIRECT-OBJ-NOUN - ] ].

obl-1sg-noun-lex := obl-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st, NUM sg ] ].

obl-2sg-noun-lex := obl-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd, NUM sg ] ].

obl-3sg-noun-lex := obl-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd, NUM sg ] ].

obl-1pl-noun-lex := obl-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st, NUM pl ] ].

obl-2pl-noun-lex := obl-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd, NUM pl ] ].

obl-du-noun-lex := obl-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st, NUM du ] ].

obl-3pl-noun-lex := obl-pron-noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd, NUM pl ] ].

;;; Verbs

verb-lex := non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD verb,
                       HC-LIGHT - ] ].

main-verb-lex := verb-lex & basic-verb-lex &
  [ SYNSEM.LOCAL [ CAT [ HEAD [ AUX - ,
                                PRD - ],
                         VAL [ SPR < >,
                               SPEC < >,
                               SUBJ < #subj > ] ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT.VAL [ SPR < >,
                                     COMPS < > ],
                           CONT.HOOK.INDEX #xarg ] ] ].

aux-lex := verb-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.AUX + ].

intransitive-verb-lex := main-verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

transitive-verb-lex := main-verb-lex & transitive-lex-item & fossil-aspect-infix-or-fossil-aspect-prefix-rule-dtr & only-focus-prefix-or-only-focus-suffix-or-infx-rule-dtr &
  [ SYNSEM.LOCAL.CAT [ HEAD.ENCPRON #encpron,
                       VAL [ SUBJ < [ LOCAL.CAT.HEAD.ENCPRON #encpron ] >,
                             COMPS < #comps > ] ],
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

trans-verb-lex := transitive-verb-lex &
  [ INFLECTED.ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG - ].

intrans-verb-lex := intransitive-verb-lex.

embedding-verb-lex := main-verb-lex & clausal-second-arg-trans-lex-item &
 [ SYNSEM.LOCAL.CAT.VAL [ COMPS < #comps & [ LOCAL.CAT.HEAD comp ] >,
                          SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg ],
   ARG-ST < [ ], #comps > ].

embedding-declarative-verb-lex := embedding-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST [ LOCAL.CONT.HOOK.INDEX.SF prop ] ].

embedding-interrogative-verb-lex := embedding-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST [ LOCAL.CONT.HOOK.INDEX.SF ques ] ].

;;; Auxiliaries

enclitic-pronoun-subj-raise-aux := aux-lex & trans-first-arg-raising-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             COMPS < #comps >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun &
                                  [ CASE #case,
                                    ENCPRON + ,
                                    LOCNOUN - ],
                             VAL [ SUBJ < >,
                                   SPR < >,
                                   SPEC < >,
                                   COMPS < > ] ],
                       CONT.HOOK [ INDEX #xarg ] ] ],
             #comps &
             [ LOCAL.CAT [ HEAD verb,
                           VAL [ SPR < >,
                                 SPEC < >,
                                 SUBJ < unexpressed &
                                        [ LOCAL.CAT.HEAD.CASE #case ] > ] ] ] > ].

non-pronoun-subj-raise-aux := aux-lex & trans-first-arg-raising-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             COMPS < #comps >,
                             SUBJ < > ] ],
    ARG-ST < [ ],
             #comps &
             [ LOCAL.CAT [ HEAD verb,
                           VAL [ COMPS < >,
                                 SPR < >,
                                 SPEC < >,
                                 SUBJ < > ] ] ] > ].

adj-subj-raise-aux := aux-lex & trans-first-arg-raising-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             COMPS < #comps >,
                             SUBJ < > ] ],
    ARG-ST < [ ],
             #comps &
             [ LOCAL.CAT [ HEAD adj,
                           VAL [ COMPS < >,
                                 SPEC < >,
                                 SUBJ < > ] ] ] > ].

neg-enclitic-pronoun-aux-lex := enclitic-pronoun-subj-raise-aux & trans-first-arg-raising-lex-item-1 & norm-ltop-lex-item & single-rel-lex-item &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX #index,
                   CAT.VAL [ SUBJ < [ OPT - ] >,
                             COMPS.FIRST.LOCAL [ CONT.HOOK.INDEX #index,
                                                 CAT.HEAD [ FORM finite,
                                                            ENCPRON + ] ] ] ] ].

neg-non-pronoun-aux-lex := non-pronoun-subj-raise-aux & trans-first-arg-raising-lex-item-1 & norm-ltop-lex-item & single-rel-lex-item &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX #index,
                   CAT.VAL [ SUBJ < >,
                             COMPS.FIRST.LOCAL [ CONT.HOOK.INDEX #index,
                                                 CAT.HEAD [ FORM finite,
                                                            ENCPRON - ] ] ] ] ].

neg-aux-adj-lex := adj-subj-raise-aux & trans-first-arg-raising-lex-item-1 & norm-ltop-lex-item & single-rel-lex-item &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX #index,
                   CAT.VAL [ COMPS.FIRST.LOCAL [ CONT.HOOK.INDEX #index,
                                                 CAT.HEAD [ FORM finite,
                                                            ENCPRON - ] ] ] ] ].


;;; NP predicate (copula-less equational sentence)
n-bar-predicate-rule := unary-phrase & nocoord &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verb & [ MOD < >,
                                         PRD + ],
                           VAL [ SPR < >,
                                 COMPS < >,
                                 SUBJ < [ OPT - ,
                                          LOCAL [ CONT.HOOK [ INDEX #arg1 ],
                                                  CAT [ HEAD noun & [ NP-PRED-NOUN +,
                                                                      LOCNOUN - ],
                                                                      VAL.SPR < > ] ] ] > ] ] ],
             NON-LOCAL #non-local ],
    C-CONT [ HOOK [ LTOP #ltop,
                    INDEX #index,
                    XARG #arg1 ],
             RELS <! arg12-ev-relation &
                   [ PRED "_be_v_id_rel",
                     LBL #ltop,
                     ARG0 #index,
                     ARG1 #arg1,
                     ARG2 #arg2 ],
                   quant-relation &
                   [ PRED "exist_q_rel",
                     ARG0 #arg2,
                     RSTR #harg ] !>,
             HCONS <! qeq & [ HARG #harg, LARG #larg ] !> ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD noun & [ NP-PRED-NOUN + ,
                                                  LOCNOUN - ,
                                                  WHQUES - ],
                                    VAL [ SPR < > ] ],
                              CONT.HOOK [ INDEX #arg2,
                                          LTOP #larg ] ],
                      NON-LOCAL #non-local ] ] > ].

;;; Adjectives

; commenting this out because Ilocano adj can act as both adj and adv via ligature (or 'iti' for adv)
; adj wants to see LOCAL.CONT.HOOK.XARG ref-ind but to enable adv, this needs to be event-or-ref-index
; adj-lex := basic-intersective-adjective-lex & no-hcons-lex-item.
basic-intersective-adjective-adverb-lex := basic-adjective-lex &
  [ SYNSEM [ LOCAL.CONT.HOOK.XARG event-or-ref-index & #xarg,
             LKEYS.KEYREL.ARG1 #xarg ] ].
adj-lex := basic-intersective-adjective-adverb-lex & no-hcons-lex-item.

adj-adj-lex := stative-pred-adj-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ MOD < >,
                            PRD - ] ].

; Basic attributive adjective definition

; attr-adj-lex := adj-lex & intersective-mod-lex &
;   [ SYNSEM.LOCAL.CAT.HEAD.MOD < [ LOCAL.CAT [ HEAD noun,
;                                               VAL.SPR cons ] ] > ].

; Stative predicate adjective definition

stative-pred-adj-lex := adj-lex &
  [ SYNSEM.LOCAL [ CAT.VAL.SUBJ < [ LOCAL [ CONT.HOOK.INDEX #xarg,
                                            CAT [ VAL [ SPR < >,
                                                        COMPS < > ],
                                                  HEAD noun & [ CASE cor ] ] ] ] >,
                   CONT.HOOK.XARG #xarg ] ].

;;; Attributive Adjectives with ligature, intersecting between noun and adj, or adj and noun
attr-adj-mod-ligature-lex := basic-one-arg & intersective-mod-lex & raise-sem-lex-item &
  [ SYNSEM.LOCAL [ CAT [ HEAD adp & 
                           [ INIT #init,
                             MOD < [ LOCAL [ CAT [ HEAD noun,
                                                   VAL.SPR < [ ] > ],
                                             CONT.HOOK [ INDEX #index ] ] ] > ],
                         VAL [ SPR < >,
                               SUBJ < >,
                               SPEC < >,
                               COMPS < #comps & [ LOCAL [ CAT [ HEAD adj,
                                                                VAL.SUBJ < [ ] > ],
                                                          CONT.HOOK [ XARG #index ] ] ] > ],
                         POSTHEAD #init ] ],
    ARG-ST < #comps > ].

;;; Adverbs
; INIT - to prevent sentence to start from ligature
adv-mod-ligature-lex := basic-one-arg & intersective-mod-lex & raise-sem-lex-item &
  [ SYNSEM.LOCAL [ CAT [ HEAD adp & 
                           [ INIT - , 
                             MOD < [ LOCAL [ CAT [ HEAD verb,
                                                   VAL [ SUBJ < >,
                                                         COMPS < > ] ],
                                             CONT.HOOK [ INDEX #index ] ] ] > ],
                         VAL [ SPR < >,
                               SUBJ < >,
                               SPEC < >,
                               COMPS < #comps & [ LOCAL [ CAT [ HEAD adj,
                                                                VAL.SUBJ < [ ] > ],
                                                          CONT.HOOK.XARG #index ] ] > ],
                         POSTHEAD - ] ],
    ARG-ST < #comps > ].

; INIT + to prevent sentence to end with the 'iti'
adv-mod-iti-lex := basic-one-arg & intersective-mod-lex & raise-sem-lex-item &
  [ SYNSEM.LOCAL [ CAT [ HEAD adp & 
                           [ INIT + ,
                             MOD < [ LOCAL [ CAT [ HEAD verb,
                                                   VAL [ SUBJ < >,
                                                         COMPS < > ] ],
                                             CONT.HOOK [ INDEX #index ] ] ] > ],
                         VAL [ SPR < >,
                               SUBJ < >,
                               SPEC < >,
                               COMPS < #comps & [ LOCAL [ CAT [ HEAD adj,
                                                              VAL.SUBJ < [ ] > ],
                                                          CONT.HOOK.XARG #index ] ] > ],
                         POSTHEAD + ] ],
    ARG-ST < #comps > ].

;;; Others

;;; PP locative predicate
locative-vp-phrase := unary-phrase & nocoord &
  [ SYNSEM [ LOCAL.CAT [ HEAD verb & [ MOD < >,
                                       FORM finite,
                                       PRD + ],
                         VAL [ SPR < >,
                               COMPS < >,
                               SUBJ < [ LOCAL [ CONT.HOOK [ INDEX #arg1 ],
                                                CAT [ HEAD noun & [ CASE cor,
                                                                    LOCNOUN - ],
                                                      VAL.SPR < > ] ] ] > ] ],
             NON-LOCAL #non-local ],
    C-CONT [ HOOK [ LTOP #ltop,
                    INDEX #index,
                    XARG #arg1 ],
             RELS <! arg12-ev-relation &
                   [ PRED "_loc_p_rel",
                     LBL #ltop,
                     ARG0 #index,
                     ARG1 #arg1,
                     ARG2 #arg2 ] !>,
             HCONS <! !> ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD noun & [ LOCNOUN + ],
                                  VAL [ SPR < > ] ],
                            CONT.HOOK [ INDEX #arg2 ] ],
                      NON-LOCAL #non-local ] ] > ].


;;; Complementizers
complementizer-lex-item := raise-sem-lex-item & basic-one-arg &
  [ SYNSEM [ LOCAL [ CAT [ HEAD comp & [ MOD < > ],
                           VAL [ SPR < >,
                                 SUBJ < >,
                                 COMPS < #comp > ] ] ] ],
    ARG-ST < #comp &
             [ LOCAL [ CAT [ HEAD verb,
                             VAL [ SUBJ < >,
                                   COMPS < > ] ] ] ] > ].

complementizer-declarative-lex-item := complementizer-lex-item &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.SF prop ].

complementizer-interrogative-lex-item := complementizer-lex-item &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.SF ques ].

;;; Determiners
;;; SPEC is non-empty, and already specified by basic-determiner-lex.

determiner-lex := basic-determiner-lex & norm-zero-arg & non-mod-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                           COMPS < >,
                           SUBJ < > ],
                   CONT.HOOK.INDEX [ COG-ST type-id ] ] ].

core-sg-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CAT.HEAD [ CASE cor,
                                                       WHDETERMINER - ,
                                                       DIRECT-OBJ-NOUN + ],
                                            CONT.HOOK.INDEX.PNG.NUM sg ] ].

core-pl-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CAT.HEAD [ CASE cor,
                                                       WHDETERMINER - ,
                                                       DIRECT-OBJ-NOUN + ],
                                            CONT.HOOK.INDEX.PNG.NUM non-sg ] ].

obl-sg-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CAT.HEAD [ CASE obl,
                                                       WHDETERMINER - ,
                                                       NP-PRED-NOUN - ,
                                                       DIRECT-OBJ-NOUN + ],
                                            CONT.HOOK.INDEX.PNG.NUM sg ] ].

obl-pl-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CAT.HEAD [ CASE obl,
                                                       WHDETERMINER - ,
                                                       NP-PRED-NOUN - ,
                                                       DIRECT-OBJ-NOUN + ],
                                            CONT.HOOK.INDEX.PNG.NUM non-sg ] ].

;wh pronoun take absolutive case (subj of agent focus verb, obj of goal focus verb)
wh-core-sg-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CAT.HEAD [ CASE abs,
                                                       WHDETERMINER + ],
                                            CONT.HOOK.INDEX.PNG.NUM sg ] ].

wh-core-pl-determiner-lex := determiner-lex & no-icons-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CAT.HEAD [ CASE abs,
                                                       WHDETERMINER + ],
                                            CONT.HOOK.INDEX.PNG.NUM non-sg ] ].


;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules 
;;;;;;;;;;;;;;;;;;;

;;; Intermediate rule types

fossil-aspect-infix-or-fossil-aspect-prefix-rule-dtr := word-or-lexrule.
only-focus-prefix-or-only-focus-suffix-or-infx-rule-dtr := word-or-lexrule.

;;; Lexical rule types

only-focus-suffix-or-infx-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG +,
                ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix ],
    DTR only-focus-prefix-or-only-focus-suffix-or-infx-rule-dtr &
        [ INFLECTED.FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix ] ].

only-goal-focus-suffix-lex-lex-rule := only-focus-suffix-or-infx-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg,
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                         OPT + ] ] ].

only-actor-focus-infix-lex-lex-rule := only-focus-suffix-or-infx-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                        OPT + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE obl,
                                         OPT-CS type-id,
                                         OPT + ] ] ].

only-aspect-prefix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ],
    DTR trans-verb-lex &
        [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                      ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ] ] ].

only-perf-aspect-prefix-lex-lex-rule := only-aspect-prefix-lex-rule-super &
  [ SYNSEM.LOCAL [ CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg,
                             COMPS.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                           OPT + ] ],
                   CONT.HOOK.INDEX.E.ASPECT perfective ] ].

productive-focus-suffix-or-infix-lex-rule-super := add-only-no-ccont-rule & fossil-aspect-infix-or-fossil-aspect-prefix-rule-dtr & infl-lex-rule &
  [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG -,
                ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ],
    DTR trans-verb-lex &
        [ INFLECTED.ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ] ].

productive-actor-focus-infix-lex-lex-rule := productive-focus-suffix-or-infix-lex-rule-super &
  [ INFLECTED.FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG -,
    SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                        OPT + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE obl,
                                         OPT-CS type-id,
                                         OPT + ] ] ].

productive-goal-focus-suffix-lex-lex-rule := productive-focus-suffix-or-infix-lex-rule-super &
  [ INFLECTED.FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG -,
    SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg,
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                         OPT + ] ] ].

fossil-aspect-prefix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG +,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx,
                ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG #only-aspect-infix-or-only-aspect-prefix-or-only-aspect-suffix-or-only-focus-prefix-or-only-focus-suffix-or-infx-or-productive-focus-prefix-or-productive-focus-suffix-or-infix-or-productive-imperf-aspect-redup ],
    DTR fossil-aspect-infix-or-fossil-aspect-prefix-rule-dtr &
        [ INFLECTED [ ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx,
                      ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG #only-aspect-infix-or-only-aspect-prefix-or-only-aspect-suffix-or-only-focus-prefix-or-only-focus-suffix-or-infx-or-productive-focus-prefix-or-productive-focus-suffix-or-infix-or-productive-imperf-aspect-redup ] ] ].

fossil-aspect-prefix-lex-lex-rule := fossil-aspect-prefix-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT perfective ].

only-focus-prefix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG +,
                ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix ],
    DTR only-focus-prefix-or-only-focus-suffix-or-infx-rule-dtr &
        [ INFLECTED.FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix ] ].

only-actor-focus-prefix-lex-lex-rule := only-focus-prefix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                        OPT + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE obl,
                                         OPT-CS type-id,
                                         OPT + ] ] ].

only-goal-focus-prefix-lex-lex-rule := only-focus-prefix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg,
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                         OPT + ] ] ].

productive-focus-prefix-lex-rule-super := add-only-no-ccont-rule & fossil-aspect-infix-or-fossil-aspect-prefix-rule-dtr & infl-lex-rule &
  [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG -,
                ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ],
    DTR trans-verb-lex &
        [ INFLECTED.ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ] ].

productive-actor-focus-prefix-lex-rule := productive-focus-prefix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                        OPT + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE obl,
                                         OPT-CS type-id,
                                         OPT + ] ] ].

productive-goal-focus-prefix-lex-rule := productive-focus-prefix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg,
                           COMPS.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                         OPT + ] ] ].

only-aspect-infix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ],
    DTR trans-verb-lex &
        [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                      ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ] ] ].

only-perf-aspect-infix-lex-lex-rule := only-aspect-infix-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT perfective,
                   CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg,
                             COMPS.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                           OPT + ] ] ] ].

fossil-aspect-infix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG +,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx,
                ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG #only-aspect-infix-or-only-aspect-prefix-or-only-aspect-suffix-or-only-focus-prefix-or-only-focus-suffix-or-infx-or-productive-focus-prefix-or-productive-focus-suffix-or-infix-or-productive-imperf-aspect-redup ],
    DTR fossil-aspect-infix-or-fossil-aspect-prefix-rule-dtr &
        [ INFLECTED [ ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx,
                      ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG #only-aspect-infix-or-only-aspect-prefix-or-only-aspect-suffix-or-only-focus-prefix-or-only-focus-suffix-or-infx-or-productive-focus-prefix-or-productive-focus-suffix-or-infix-or-productive-imperf-aspect-redup ] ] ].

fossil-perf-aspect-infix-lex-lex-rule := fossil-aspect-infix-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT perfective ].

only-aspect-suffix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ],
    DTR trans-verb-lex &
        [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                      ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ] ] ].

imperf-aspect-redup-lex-lex-rule := only-aspect-suffix-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.ASPECT imperfective,
                   CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE cor+erg,
                             COMPS.FIRST [ LOCAL.CAT.HEAD.CASE cor+abs,
                                           OPT + ] ] ] ].

productive-imperf-aspect-redup-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & only-focus-prefix-or-only-focus-suffix-or-infx-rule-dtr &
  [ INFLECTED [ ONLY-ASPECT-INFIX-OR-ONLY-ASPECT-PREFIX-OR-ONLY-ASPECT-SUFFIX-OR-ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-OR-PRODUCTIVE-FOCUS-PREFIX-OR-PRODUCTIVE-FOCUS-SUFFIX-OR-INFIX-OR-PRODUCTIVE-IMPERF-ASPECT-REDUP-FLAG +,
                FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ],
    DTR trans-verb-lex &
        [ INFLECTED [ FOSSIL-ASPECT-INFIX-OR-FOSSIL-ASPECT-PREFIX-FLAG #fossil-aspect-infix-or-fossil-aspect-prefix,
                      ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG #only-focus-prefix-or-only-focus-suffix-or-infx ] ] ].

productive-imperf-aspect-redup-lex-lex-rule := productive-imperf-aspect-redup-lex-rule-super &
  [ INFLECTED.ONLY-FOCUS-PREFIX-OR-ONLY-FOCUS-SUFFIX-OR-INFX-FLAG -,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT imperfective ].

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

context1-decl-head-opt-subj-phrase := decl-head-opt-subj-phrase &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL [ CAT.HEAD.CASE abs,
                                                     CONT.HOOK.INDEX.PNG [ PER 3rd, NUM sg ] ] ].

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

head-comp-phrase := basic-head-1st-comp-phrase & head-initial &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.INIT + ].

comp-head-phrase := basic-head-1st-comp-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD adp & [ INIT - ] ].

head-subj-phrase := decl-head-subj-phrase & head-initial &
  [ HEAD-DTR.SYNSEM.LIGHT + ].

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].

;;;
;;; Possessive phrase: In all possessive constructions we've seen, the
;;; possessum (head) is initial, and the possessor is in second position.

;FIX ME: make two versions of poss, one for COG-ST of uniq+fam+act of and another for type-id
poss-phrase := head-initial &
  [ SYNSEM.LOCAL.CAT [ HEAD #head,
                       VAL [ SPR #hdspr,
                             COMPS < >,
                             SUBJ < > ] ],
    C-CONT [ HOOK.INDEX #index,
      RELS < ! arg12-ev-relation & [ PRED "poss_rel",
                                     LBL #lbl,
                                     ARG1 #index,
                                     ARG2 #poss ],
               quant-relation & [ PRED "exist_q_rel",
               ARG0 #index,
               RSTR #harg ] ! >,
      HCONS < ! qeq & [ HARG #harg, LARG #lbl ] ! >,
      ICONS < ! ! > ],
      HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD #head & noun & [ DIRECT-OBJ-NOUN + ,
                                                          LOCNOUN - ],
                              VAL.SPR #hdspr & < [ ] > ],
                              CONT.HOOK [ INDEX #index & [ COG-ST cog-st ],
                                          LTOP #lbl ] ],
      NON-HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD noun & [ CASE cor+erg ],
                                        VAL.SPR < > ],
                                  CONT.HOOK.INDEX #poss ] ].

;;;;;;;;;;;;;;;;;;
;;; Coordination
;;;;;;;;;;;;;;;;;;

;;; Coordination Strategy 1

n1-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-bottom-coord-rule := conj-first-bottom-coord-rule & n-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1

np1-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-bottom-coord-rule := conj-first-bottom-coord-rule & np-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1

vp1-top-coord-rule := basic-vp-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

vp1-bottom-coord-rule := conj-first-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1

s1-top-coord-rule := basic-s-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

s1-bottom-coord-rule := conj-first-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Feature Resolution Rules

non-sg-non-sg-any-pernum-coord-rule := coord-phrase &
  [ LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM non-sg,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM non-sg ].

pass-up-png-coord-rule := bottom-coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG #png,
    NONCONJ-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG #png ].

;;; Coordination Strategy 5

n5-non-sg-non-sg-any-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule & non-sg-non-sg-any-pernum-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

n5-bottom-coord-rule := conj-first-bottom-coord-rule & n-bottom-coord-phrase & pass-up-png-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

;;;;;
;;; Second-position enclitic support
;;;;;

canonical-synsem :+
    [ L-PERIPH bool ].

basic-binary-phrase :+
    [ SYNSEM.L-PERIPH #periph,
      ARGS < [ SYNSEM.L-PERIPH #periph ], [ SYNSEM.L-PERIPH - ] > ].

basic-head-mod-phrase-simple :+
    [ HEAD-DTR.SYNSEM.L-PERIPH #periph,
      NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.MOD < [ L-PERIPH #periph ] > ].

same-periph-unary-phrase := unary-phrase &
    [ SYNSEM.L-PERIPH #periph,
      ARGS < [ SYNSEM.L-PERIPH #periph ] > ].

bare-np-phrase :+
    [ SYNSEM.LIGHT - ].

;question-clitic-lex := no-hcons-lex-item &
;    [ SYNSEM.LOCAL [ CAT [ VAL [ SPR < >, COMPS < >, SUBJ < >, SPEC < >],
;                                          HEAD adv & 
;                                                [ MOD < [ LIGHT +,
;                                                          LOCAL intersective-mod,
;                                                          L-PERIPH + ] > ]],
;                             CONT.RELS <! !> ]].

;;;;;;;;;;;;;;;;;;;;
;;; Wh-Questions ;;;
;;;;;;;;;;;;;;;;;;;;

; Adding this feature for now so grammar will load
non-local :+ [ QUE 0-1-dlist ].

wh-pronoun-noun-lex := norm-hook-lex-item & basic-icons-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD noun & [ LOCNOUN - ,
                                         WHQUES + ],
                           VAL [ SUBJ < >,
                                 COMPS < >,
                                 SPEC < > ] ],
                     CONT [ HOOK.INDEX.PNG.PER 3rd ] ] ] ].

; wh-question words without core case determiner for combining with NP pred
; or, combining with complementizers
no-spr-wh-pronoun-noun-lex := wh-pronoun-noun-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD noun & [ PRD + ],
                           VAL [ SPR < > ] ],
                     CONT [ RELS <! [ LBL #larg,
                                      ARG0 #ind & ref-ind ],
                                    [ PRED "wh_q_rel",
                                      ARG0 #ind,
                                      RSTR #harg ] !>,
                            HCONS <! [ HARG #harg,
                                       LARG #larg ] !> ] ],
              NON-LOCAL.QUE <! #ind !> ] ].

obl-spr-wh-pronoun-noun-lex := wh-pronoun-noun-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD noun & [ CASE abs,
                                         PRD - ],
                           VAL [ SPR < [ OPT - ] > ] ],
                     CONT [ RELS <! [ LBL #larg,
                                      ARG0 #ind & ref-ind ] !>,
                            HCONS <! [ LARG #larg ] !> ] ],
              NON-LOCAL.QUE <! #ind !> ] ].


basic-head-filler-phrase :+
   [ ARGS < [ SYNSEM.LOCAL.COORD - ], [ SYNSEM.LOCAL.COORD - ] > ].

wh-ques-phrase := basic-head-filler-phrase & interrogative-clause & head-final &
   [ SYNSEM.LOCAL.CAT [ MC bool,
                        VAL #val,
                        HEAD verb & [ FORM finite ] ],
     HEAD-DTR.SYNSEM.LOCAL.CAT [ MC na,
                                 HEAD.PRD #prd,
                                 VAL #val & [ SUBJ < >,
                                              COMPS < > ] ],
     NON-HEAD-DTR [ SYNSEM [ LOCAL.CAT.HEAD.PRD #prd,
                             NON-LOCAL.QUE <! ref-ind !> ] ] ].

; take off SUBJ cons constraints off for VSO language to work
extracted-comp-phrase := basic-extracted-comp-phrase &
  [ SYNSEM.LOCAL.CAT.HEAD verb ].
;  [ SYNSEM.LOCAL.CAT.HEAD verb,
;    HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SUBJ cons ].

extracted-subj-phrase := basic-extracted-subj-phrase &
  [ SYNSEM.LOCAL.CAT.HEAD verb,
    HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

;;;;;;;;;;;;;;;;;;;;;;
;;; Demonstratives ;;;
;;;;;;;;;;;;;;;;;;;;;;

demonstrative_a_rel := predsort.
proximal+dem_a_rel := demonstrative_a_rel. ; near speaker
medial+dem_a_rel := demonstrative_a_rel.   ; near hearer
distal+dem_a_rel := demonstrative_a_rel.   ; near neither speaker nor hearer (remote)

determiner-lex-supertype := norm-hook-lex-item & norm-zero-arg &
  [ SYNSEM [ LOCAL [ CAT [ HEAD det,
               VAL[ SPEC.FIRST.LOCAL.CONT.HOOK [ INDEX #ind,
                                   LTOP #larg ],
                                SPR < >,
                                SUBJ < >,
                                COMPS < >]],
             CONT.HCONS <! qeq &
                 [ HARG #harg,
                   LARG #larg ] !> ], 
         LKEYS.KEYREL quant-relation &
           [ ARG0 #ind,
             RSTR #harg ] ] ].

demonstrative-determiner-lex := determiner-lex-supertype &
 [ SYNSEM [ LOCAL [ CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK [ LTOP #ltop,
                                                         INDEX #ind & [ COG-ST activ+fam ] ],
                    CONT.RELS <! [ PRED "exist_q_rel" ],
                                 arg1-ev-relation & #akr & 
                                 [ LBL #ltop,
                                   ARG1 #ind ] !> ],
            LKEYS.ALTKEYREL #akr ] ].

;;; Temporal Adverbs

temporal-adv-mod-idi-lex := basic-one-arg & intersective-mod-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD adp & 
                         [ INIT + ,
                           MOD < [ LOCAL [ CAT [ HEAD verb,
                                                 VAL [ SUBJ < >,
                                                       COMPS < > ] ],
                                           CONT.HOOK.INDEX #arg1 ] ] > ],
                           VAL [ SPR < >,
                                 SUBJ < >,
                                 SPEC < >,
                                 COMPS < #comps & [ LOCAL [ CAT [ HEAD noun,
                                                                  VAL.SPR < > ],
                                                            CONT.HOOK.INDEX #arg2 ] ] > ],
                           POSTHEAD + ],
                     CONT.RELS <! [ PRED #pred ],
                                  [ ARG1 #arg1 ],
                                  [ ARG2 #arg2 ] !> ],
             LKEYS.KEYREL.PRED #pred ],
    ARG-ST < #comps > ].

temporal-noun-lex := noun-lex.
